# character interaction for applying chastity to prisoners

bno_chastity_interaction = {
	interface_priority = 30
	icon = bno_caged
	
	category = interaction_category_prison
	desc = bno_chastity_interaction_desc
	
	is_shown = {
		scope:recipient = {
			is_imprisoned_by = scope:actor
			NOT = { has_trait = bno_caged }
			NOT = { has_trait = bno_castrated }
			NOT = { has_trait = bno_bbc }
			is_a_male = yes
		}
		scope:actor = {
			is_adult = yes
			OR = {
				has_trait = bno_whitegirl
				has_trait = bno_bbc
			}
		}
	}
	
	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = "currently_being_tortured"
				NOT = { has_character_flag = is_being_tortured }
			}
		}
		cannot_release_former_regent_whilst_old_regent_holds_power_trigger = {
			PRISONER = scope:recipient
			REGENT = scope:recipient.var:imprisoned_by_diarch
		}
	}
	
	is_highlighted = {
		OR = {
			scope:actor = { has_trait = sadistic }
			scope:actor = { has_relation_rival = scope:recipient }
			scope:recipient = {
				any_claim = {
					holder = scope:actor
				}
			}
		}
	}
	
	on_accept = {
		scope:recipient = {
			add_character_flag = {
				flag = is_being_tortured
				months = 6 # Players in MP can keep the event window open...
			}
			bno_caged_effect = yes
		}
		
		show_as_tooltip = {
			scope:recipient = {
				bno_caged_effect = yes
				release_from_prison = yes
				add_opinion = {
					target = scope:actor
					modifier = disappointed_opinion
					opinion = -50
				}
			}
		}
		hidden_effect = {
			scope:recipient = {
				bno_caged_effect = yes
				release_from_prison = yes
				add_opinion = {
					target = scope:actor
					modifier = disappointed_opinion
					opinion = -50
				}
			}
		}
		
		scope:actor = {
			if = {
				limit = {
					scope:recipient = {
						NOT = { liege = scope:actor }
					}
				}
				add_courtier = scope:recipient
			}
		}
	}
	
	auto_accept = yes
	
	ai_targets = {
		ai_recipients = prisoners
	}
	
	ai_potential = {
		always = yes
	}
	
	ai_will_do = {
		base = -20
		
		modifier = {
			has_trait = sadistic
			add = 20
		}
		ai_value_modifier = {
			ai_compassion = tiny_chance_impact_negative_ai_value #Adds +50 for highly uncompassionate characters, -50 for highly compassionate characters
		}
		opinion_modifier = {
			opinion_target = scope:recipient
			multiplier = -0.25
		}
		#Scope:target has caused internal strife in the realm
		character_hates_scope_due_to_strife_modifier = { TARGET = scope:recipient }
		modifier = { # Family Feud
			exists = scope:actor.house
			exists = scope:recipient.house
			scope:actor = {
				house.house_head = {
					any_owned_story = {
						story_type = story_cycle_house_feud
						has_variable = house_feud_house
						var:house_feud_house = scope:recipient.house
					}
				}
				has_opinion_modifier = {
					modifier = house_feud_opinion
					target = scope:recipient.house.house_head
				}
			}
			add = 30
		}
	}
	
	ai_frequency = 36
}

bno_castration_interaction = {
	interface_priority = 30
	icon = bno_castrated
	
	category = interaction_category_prison
	desc = bno_castration_interaction_desc
	
	is_shown = {
		scope:recipient = {
			is_imprisoned_by = scope:actor
			has_trait = bno_caged
			NOT = { has_trait = bno_castrated }
			NOT = { has_trait = bno_bbc }
			is_a_male = yes
		}
		scope:actor = {
			is_adult = yes
			OR = {
				has_trait = bno_whitegirl
				has_trait = bno_bbc
			}
		}
	}
	
	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = "currently_being_tortured"
				NOT = { has_character_flag = is_being_tortured }
			}
		}
		cannot_release_former_regent_whilst_old_regent_holds_power_trigger = {
			PRISONER = scope:recipient
			REGENT = scope:recipient.var:imprisoned_by_diarch
		}
	}
	
	is_highlighted = {
		OR = {
			scope:actor = { has_trait = sadistic }
			scope:actor = { has_relation_rival = scope:recipient }
			scope:recipient = {
				any_claim = {
					holder = scope:actor
				}
			}
		}
	}
	
	on_accept = {
		scope:recipient = {
			add_character_flag = {
				flag = is_being_tortured
				months = 6 # Players in MP can keep the event window open...
			}
			bno_castrated_effect = yes
		}
		
		show_as_tooltip = {
			scope:recipient = {
				bno_castrated_effect = yes
				release_from_prison = yes
				add_opinion = {
					target = scope:actor
					modifier = disappointed_opinion
					opinion = -50
				}
			}
		}
		hidden_effect = {
			scope:recipient = {
				bno_castrated_effect = yes
				release_from_prison = yes
				add_opinion = {
					target = scope:actor
					modifier = disappointed_opinion
					opinion = -50
				}
			}
		}
		scope:actor = {
			add_courtier = scope:recipient
		}
	}
	
	auto_accept = yes
	
	ai_targets = {
		ai_recipients = prisoners
	}
	
	ai_potential = {
		always = yes
	}
	
	ai_will_do = {
		base = -20
		
		modifier = {
			has_trait = sadistic
			add = 20
		}
		ai_value_modifier = {
			ai_compassion = tiny_chance_impact_negative_ai_value #Adds +50 for highly uncompassionate characters, -50 for highly compassionate characters
		}
		opinion_modifier = {
			opinion_target = scope:recipient
			multiplier = -0.25
		}
		#Scope:target has caused internal strife in the realm
		character_hates_scope_due_to_strife_modifier = { TARGET = scope:recipient }
		modifier = { # Family Feud
			exists = scope:actor.house
			exists = scope:recipient.house
			scope:actor = {
				house.house_head = {
					any_owned_story = {
						story_type = story_cycle_house_feud
						has_variable = house_feud_house
						var:house_feud_house = scope:recipient.house
					}
				}
				has_opinion_modifier = {
					modifier = house_feud_opinion
					target = scope:recipient.house.house_head
				}
			}
			add = 30
		}
	}
	
	ai_frequency = 36
}
